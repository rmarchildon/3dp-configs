## Voron Design VORON2 300 SKR 1.4 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                        [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [homing_override] section
## Z Endstop Switch  offset for Z0        [stepper_z] section
## Probe points                            [quad_gantry_level] section
## Min & Max gantry corner postions        [quad_gantry_level] section
## PID tune                                [extruder] and [heater_bed] sections
## Fine tune E steps                    [extruder] section

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE              0.10
##===================================================================

[mcu]
##    MCU for X/Y/E steppers main MCU
##    [X in X] - B Motor
##    [Y in Y] - A Motor
##    [E in E0] - Extruder
##    Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_14400014A1086EAF3953DC5EC02000F5-if00
##--------------------------------------------------------------------

[mcu z]
##    MCU for Z steppers
##    [Z in X] - Front Left
##    [Z1 in Y] - Rear Left
##    [Z2 in Z] - Rear Right
##    [Z3 in E0]- Front Right
##    Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0A700014A1086EAF1753DC5EC22000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000                #Max 4000
max_z_velocity: 15             #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#     X/Y Stepper Settings
#####################################################################

##    Connected to X on mcu_xye (B Motor)
[stepper_x]
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.29
position_min: 0

position_endstop: 295
position_max: 295

homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.10
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

##    Connected to Y on mcu_xye (A Motor)
[stepper_y]
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: P1.28
position_min: 0

position_endstop: 300
position_max: 300

homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.9
interpolate: false
run_current: 1.2
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#     Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: z:P1.27
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##    Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_endstop = 0.450

position_max: 290

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##    Z MCU - In Y Position
##    Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##    Z MCU - In Z Position
##    Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##    Z MCU - In E0 Position
##    Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#     Extruder
#####################################################################

#    E0 on MCU X/Y
[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
##    Update value below when you perform extruder calibration
##    If you ask for 100mm of filament, but in reality it is 98mm:
##    rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.5977037248    #Bondtech 5mm Drive Gears
##    Update Gear Ratio depending on your Extruder Type
##    Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##    Use 80:20 for M4, M3.1
gear_ratio: 50:17                #BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: P2.7
##    Validate the following thermistor type to make sure it is correct
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 100
control = pid
pid_kp = 22.553
pid_ki = 1.432
pid_kd = 88.801

##    Try to keep pressure_advance below 1.0
pressure_advance: 0.0625
##    Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##    E0 on MCU X/Y
##    Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: P1.4
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#     Bed Heater
#####################################################################

##    SSR Pin - Z board, Fan Pin
[heater_bed]
heater_pin: z:P2.3
sensor_type: NTC 100K beta 3950
sensor_pin: z:P0.25
##    Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
control = pid
pid_kp = 40.036
pid_ki = 1.791
pid_kd = 223.701

#####################################################################
#     Probe
#####################################################################

##    Inductive Probe
##    This probe is not used for Z height, only Quad Gantry Leveling
##    Z_MAX on mcu_z
##    If your probe is NO instead of NC, add change pin to !z:P0.10
[probe]
pin: ^z:P0.10
x_offset: 0
y_offset: 25.0
z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

#####################################################################
#     Fan Control
#####################################################################

##    Hotend Fan - XYE board, HE1 Connector
[heater_fan hotend_fan]
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##    If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##    Print Cooling Fan - XYE board, Fan Pin
[fan]
pin: P2.3
kick_start_time: 0.5
##    Depending on your fan, you may need to increase this value
##    if your fan will not start. Can change cycle_time (increase)
##    if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##    Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#[heater_fan exhaust_fan]
##    Exhaust fan - Z board, HE0 Connector
#pin: z:P2.7
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#     Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 7200

[safe_z_home]
#  XY Location of the Z Endstop Switch
#  Update -10,-10 to the XY coordinates of your endstop pin
#  (such as 157,305) after going through Z Endstop Pin
#  Location Definition step.
home_xy_position: 202.000,300.000
speed:100
z_hop:10


##    Use QUAD_GANTRY_LEVEL to level a gantry.
##    Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##    MAX (250, 250), (300,300), or (350,350) depending on your printer size
##    to respective belt positions
[quad_gantry_level]
#--------------------------------------------------------------------
##    Gantry Corners for 300mm Build
gantry_corners:
    -60,-10
    360,370
#    Probe points
points:
    50,25
    50,225
    250,225
    250,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#####################################################################
#     Displays
#####################################################################

[output_pin beeper]
pin: z:P1.30

[display]
##    mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30 F3600

[gcode_macro G32]
gcode:
   SET_DISPLAY_TEXT MSG="QGL"
   G28
   QUAD_GANTRY_LEVEL
   G28 X Y                   ; Home the X and Y
   CLEAN_NOZZLE
   G28                     ; Home everything now that nozzle is clean
   PARK

#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
   {% set target_bed = params.BED|int %}
   {% set target_extruder = params.EXTRUDER|int %}

   G28                  # Full home (XYZ)
   G90                  # Absolute position
   BED_MESH_CLEAR       # Clears old saved bed mesh (if any)
   PARK

   # Heat the bed up to target via data from slicer
   SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"
   M190 S{target_bed}

   # Turns on the partcooling fan
   M106 S255

   # Heat the nozzle up to target via data from slicer
   SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"
   M109 S{target_extruder}

   ##  V2 Quad gantry level w/ Bed Mesh
   SET_DISPLAY_TEXT MSG="QGL"
   G32

   SET_DISPLAY_TEXT MSG="Bed Mesh"
   BED_MESH_CALIBRATE

   # Clean the nozzle again and unretract fillament so it's primed
   CLEAN_NOZZLE
   M83
   G1 E2 F1500

   G90
   # Ready to print
   SET_DISPLAY_TEXT MSG="Printer goes brr"



[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro CLEAN_NOZZLE]

# If you are putting your purge bucket at the rear left of the bed as per default installation, enable True on your location_bucket_rear
# variable. If you want to put your purge bucket elsewhere (perhaps the front), then set it to False. See diagrams and description
# further below on how to set your XY position.
variable_location_bucket_rear:      True

# If you want the purging routine in your bucket enabled, set to True (and vice versa).
variable_enable_purge:              True

# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             3            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.

# Adjust this so that your nozzle scrubs within the brush. Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:            1

# These parameters define your scrubbing, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:           5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              6	         ; Number of complete (A complete wipe left, right, left OR right, left, right) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush. Update as necessary. A visual reference is provided below. Note that orientation of
# parameters remain the same whether bucket is at rear or front.
#
#                  ←   brush_width   →
#                   _________________                                                          ↑
#                  |                 |  ↑                     If you chose location_bucket_rear = True, Y position is acquired
#  brush_start (x) |                 | brush_depth            from your stepper_y position_max. Adjust your brush physically in
#                  |_________________|  ↓                               Y so that the nozzle scrubs within the brush.
#                          (y)                                                                 ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
#
#

## For V2.4 300mm build, uncomment this below:
variable_brush_start:     50

# This value is defaulted from brush location in CAD (rear left). Change if your brush width is different.
variable_brush_width:          52

## These are only used if location_bucket_rear is False. You specify a custom location in y axis for your brush - see diagram above. ##
variable_brush_front:       0
variable_brush_depth:       0


# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore
# this section. A visual reference is provided below. Note that orientation of parameters remain the same whether bucket is at rear
# or front.
#
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
#

## For V2.4 300mm build, uncomment below
variable_bucket_left_width:    67

# These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
variable_bucket_right_width:   40
variable_bucket_gap:           22

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is for a default
# installation of purge bucket at rear left.
variable_bucket_start: 0

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=STATE_CLEAN_NOZZLE

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 0 = left, 1 = right
         SET_GCODE_VARIABLE MACRO=CLEAN_NOZZLE VARIABLE=bucket_pos VALUE={(range(2) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}

      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start + (brush_width * bucket_pos)} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}

      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + (brush_width * (1 - bucket_pos))} F{wipe_spd_xy}
         G1 X{brush_start + (brush_width * bucket_pos)} F{wipe_spd_xy}
      {% endfor %}

      ## Clear from area.
      # M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy}

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=STATE_CLEAN_NOZZLE

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      # M117 Please home first!

   {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.356
#*# pid_ki = 1.571
#*# pid_kd = 246.469
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.379
#*# pid_ki = 1.625
#*# pid_kd = 91.420
